{"version":3,"sources":["AppMessage.tsx","App.tsx","index.tsx"],"names":["AppMessage","state","key","onKeyBoard","event","setState","document","addEventListener","this","removeEventListener","className","React","Component","App","ReactDOM","render","getElementById"],"mappings":"oNAMaA,EAAb,4MACEC,MAAe,CACbC,IAAK,IAFT,EAaEC,WAAa,SAACC,GACZ,EAAKC,SAAS,CAAEH,IAAKE,EAAMF,OAd/B,uDAKE,WACEI,SAASC,iBAAiB,QAASC,KAAKL,cAN5C,kCASE,WACEG,SAASG,oBAAoB,QAASD,KAAKL,cAV/C,oBAiBE,WACE,IAAQD,EAAQM,KAAKP,MAAbC,IAER,OACE,mBAAGQ,UAAU,eAAb,SACGR,EAAG,mCAC4BA,EAD5B,KAEA,gCAxBZ,GAAgCS,IAAMC,WCHzBC,EAAgB,kBAC3B,qBAAKH,UAAU,MAAf,SACE,cAAC,EAAD,O,MCAJI,IAASC,OACP,cAAC,EAAD,IACAT,SAASU,eAAe,W","file":"static/js/main.f7531678.chunk.js","sourcesContent":["import React from 'react';\n\ntype State = {\n  key: string,\n};\n\nexport class AppMessage extends React.Component {\n  state: State = {\n    key: '',\n  };\n\n  componentDidMount(): void {\n    document.addEventListener('keyup', this.onKeyBoard);\n  }\n\n  componentWillUnmount(): void {\n    document.removeEventListener('keyup', this.onKeyBoard);\n  }\n\n  onKeyBoard = (event: KeyboardEvent) => {\n    this.setState({ key: event.key });\n  };\n\n  render() {\n    const { key } = this.state;\n\n    return (\n      <p className=\"App__message\">\n        {key\n          ? `The last pressed key is [${key}]`\n          : 'Nothing was pressed yet'}\n      </p>\n    );\n  }\n}\n","import React from 'react';\nimport { AppMessage } from './AppMessage';\n\nexport const App: React.FC = () => (\n  <div className=\"App\">\n    <AppMessage />\n  </div>\n);\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}